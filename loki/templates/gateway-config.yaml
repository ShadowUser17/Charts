apiVersion: "v1"
kind: "ConfigMap"
metadata:
  namespace: "{{ .Release.Namespace }}"
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-gateway"
  labels:
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.Version }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
data:
  nginx.conf: |
    worker_rlimit_nofile 8192;
    worker_processes 5;
    pid /tmp/nginx.pid;
    error_log /dev/stderr;

    events {
        worker_connections 4096;
    }

    http {
      log_format main '$remote_addr - $remote_user [$time_local] $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /dev/stderr main;
      sendfile on;
      tcp_nopush on;
      server_tokens off;
      proxy_http_version 1.1;
      client_max_body_size 100m;
      proxy_connect_timeout 300;
      proxy_read_timeout 300;
      proxy_send_timeout 300;

      upstream read {
        server {{ .Release.Name }}-{{ .Chart.Name }}-read.{{ .Release.Namespace }}.svc:3100;
      }

      upstream write {
        server {{ .Release.Name }}-{{ .Chart.Name }}-write.{{ .Release.Namespace }}.svc:3100;
      }

      server {
        listen 3100;

        location = / {
          return 200 'OK';
        }

        location = /api/prom/push {
            proxy_pass http://write$request_uri;
        }

        location = /api/prom/tail {
            proxy_pass http://read$request_uri;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location ~ /api/prom/.* {
            proxy_pass http://read$request_uri;
        }

        location ~ /prometheus/api/v1/alerts.* {
            proxy_pass http://read$request_uri;
        }

        location ~ /prometheus/api/v1/rules.* {
            proxy_pass http://read$request_uri;
        }

        location = /loki/api/v1/push {
            proxy_pass http://write$request_uri;
        }

        location = /loki/api/v1/tail {
            proxy_pass http://read$request_uri;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location ~ /loki/api/.* {
            proxy_pass http://read$request_uri;
        }

        location ~ /distributor/.* {
          proxy_pass http://write$request_uri;
        }

        location ~ /ring {
          proxy_pass http://write$request_uri;
        }

        location ~ /ingester/.* {
          proxy_pass http://write$request_uri;
        }

        location ~ /ruler/.* {
          proxy_pass http://read$request_uri;
        }

        location ~ /scheduler/.* {
          proxy_pass http://read$request_uri;
        }
      }
    }
